import fetch from 'node-fetch';

var baseUrl = 'http://mnipdmkuchipudi:7222/modeln/rest/';
var authUrl ="authenticate/session/login"
var bootstrapUrl ="client/bootstrapdata"
const body = {"username" : "Administrator","password" : "Administrator"}
const bootstrapRequestModel = { 
    sendUserAcctInfo: true,
    sendParentChildOrgHierarchy: true,
    sendFormatProperties: true,
    sendUserCapabilties: true,
    sendUsersTzDstInfo: true,
    sendDefaultTzDstInfo: true,
    sendLicensedFeatures: true,
    appSwitchImports: 
     [ 'com.modeln.AppSwitch.sale.CMnCustomSaleType.CUSTOM.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType2.CUSTOM.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType3.CUSTOM.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType.DIRECT.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType2.DIRECT.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType3.DIRECT.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType.INDIRECT.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType2.INDIRECT.label',
       'com.modeln.AppSwitch.sale.CMnCustomSaleType3.INDIRECT.label',
       'com.modeln.AppSwitch.runSearchByDefault',
       'com.modeln.DistRebatesClaim.actions',
       'com.modeln.Sale.actionConfig.IndirectSale.validationStatusActions',
       'com.modeln.Sale.actionConfig.IndirectSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.IndirectSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.IndirectSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.IndirectSalesSubmission.adjustmentStatusActions',
       'com.modeln.AppSwitch.Sale.Indirect.enableSplitSubmissions',
       'com.modeln.AppSwitch.products.preferredProductID',
       'com.modeln.AppSwitch.Sale.Indirect.enableAutoSplitSubmissions',
       'com.modeln.AppSwitch.Sale.Indirect.splitSubmissionsIncludesWarnings',
       'com.modeln.AppSwitch.community.availableGroupingRules',
       'com.modeln.AppSwitch.format.useCurrencySymbol',
       'com.modeln.AppSwitch.Sale.Indirect.UpdateAndValidate',
       'com.modeln.AppSwitch.Sale.Indirect.availableChargebackAcceptOptions',
       'com.modeln.AppSwitch.Sale.Indirect.availableSaleTypesForImportWizard',
       'com.modeln.AppSwitch.Display.Upcharges',
       'com.modeln.Sale.actionConfig.DirectSale.validationStatusActions',
       'com.modeln.Sale.actionConfig.DirectSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.DirectSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.DirectSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.DirectSalesSubmission.adjustmentStatusActions',
       'com.modeln.Sale.actionConfig.RbtPmtSale.validationStatusActions',
       'com.modeln.Sale.actionConfig.RbtPmtSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.RbtPmtSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.RbtPmtSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.RbtPmtSalesSubmission.adjustmentStatusActions',
       'com.modeln.Sale.actionConfig.Edi852.validationStatusActions',
       'com.modeln.Sale.actionConfig.Edi852.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.Edi852.reversalStatusActions',
       'com.modeln.Sale.actionConfig.CSSDSale.validationStatusActions',
       'com.modeln.Sale.actionConfig.CSSDSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.CSSDSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.Edi852Submission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.Edi852Submission.adjustmentStatusActions',
       'com.modeln.Sale.actionConfig.MDDDDSale.validationStatusActions',
       'com.modeln.Sale.actionConfig.MDDDDSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.MDDDDSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.MDDDDSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.MDDDDSalesSubmission.adjustmentStatusActions',
       'com.modeln.Sale.actionConfig.CustomSale.validationStatusActions',
      'com.modeln.Sale.actionConfig.CustomSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.CustomSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.CustomSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.CustomSalesSubmission.adjustmentStatusActions',
       'com.modeln.Sale.actionConfig.OFFCALCRBTSale.validationStatusActions',
       'com.modeln.Sale.actionConfig.OFFCALCRBTSale.lifecycleStatusActions',
       'com.modeln.Sale.actionConfig.OFFCALCRBTSale.reversalStatusActions',
       'com.modeln.SalesSubmission.actionConfig.OFFCALCRBTSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.OFFCALCRBTSalesSubmission.adjustmentStatusActions',
       'com.modeln.SalesSubmission.actionConfig.CSSDSalesSubmission.lifecycleStatusActions',
       'com.modeln.SalesSubmission.actionConfig.CSSDSalesSubmission.adjustmentStatusActions',
       'com.modeln.Formulary.actionConfig.lifecycleStatusActions',
       'com.modeln.rootUrl',
       'com.modeln.calcframework.enumsMap',
       'com.modeln.navigation.folderNavMap',
       'com.modeln._default.earliestTimeZone',
       'com.modeln._default.latestTimeZone',
       'com.modeln.sales.disableOverridableFields',
       'com.modeln.sales.overridableFieldNames',
       'com.modeln.calcframework.fgoMap',
       'com.modeln.AppSwitch.Sale.Custom.availableCustomSaleSubTypesForImportWizard',
       'com.modeln.AppSwitch.Sale.Indirect.GroupBy.Attrs',
       'com.modeln.AppSwitch.Sale.Indirect.KPI.Attrs',
       'com.modeln.AppSwitch.Sale.Indirect.GroupBy.Attrs.limit',
       'com.modeln.AppSwitch.Display.potency',
       'com.modeln.AppSwitch.Display.internalBatchNumber',
       'com.modeln.AppSwitch.Display.externalBatchNumber',
       'com.modeln.AppSwitch.SalesSubmission.enableIndirectSaleCloseButton' ],
    enumImports: 
     [ 'com.modeln.util.unit.CMnCurrency',
       'com.modeln.bp.distrebates.claim.CMnDistRebatesClaimStatus',
       'com.modeln.infr.cmty.memberinfo.CMnMemberInfoType',
       'com.modeln.util.locale.CMnLocale',
       'com.modeln.infr.cmty.org.id.CMnOrganizationIdType',
       'com.modeln.bp.catalog.id.CMnCatalogIdType',
       'com.modeln.util.unit.CMnMeasurementUnit',
       'com.modeln.bp.cmty.customerinfo.CMnMemberSubType',
       'com.modeln.infr.cmty.member.memberstatus.enums.CMnMemberStatusEnum',
       'com.modeln.intg.channel.desktop.notifmsg.CMnPriorityOrder',
       'com.modeln.bp.dw.sales.CMnResubmissionType',
       'com.modeln.bp.util.CMnDomain',
       'com.modeln.bp.dw.sales.CMnReversalStatus',
       'com.modeln.bp.dw.sales.submission.CMnSubmissionStatus',
       'com.modeln.bp.dw.sales.CMnSalesLineStatus',
       'com.modeln.bp.dw.sales.custom.CMnCustomSaleSubTypes',
       'com.modeln.infr.log.msg.CMnMsgType',
       'com.modeln.bp.dw.sales.fileinfo.CMnGroupingRule',
       'com.modeln.bp.dw.sales.CMnLineStatus',
       'com.modeln.bp.mco.utilization.enums.CMnLineSeverity',
       'com.modeln.bp.dw.sales.CMnSaleType',
       'com.modeln.bp.dw.sales.CMnReasonCode',
       'com.modeln.bp.struct.contract.enums.CMnContractType',
       'com.modeln.bp.catalog.CMnCatalogType',
       'com.modeln.bp.dw.sales.custom.CMnCustomSaleType3',
       'com.modeln.bp.dw.sales.custom.CMnCustomSaleType',
       'com.modeln.bp.freegood.enums.CMnFreeGoodType',
       'com.modeln.bp.cf.impl.enums.CMnCFCalcObjType',
       'com.modeln.bp.cf.module.CMnCFModuleType',
       'com.modeln.bp.cf.impl.enums.CMnCFFilterTag',
       'com.modeln.bp.cf.impl.enums.CMnCFCalcObjStatus',
       'com.modeln.bp.cf.impl.enums.CMnCFDimensions',
       'com.modeln.bp.dw.sales.CMnSaleWorkflowStep',
       'com.modeln.infr.businessengine.enums.CMnValueType',
       'com.modeln.infr.cmty.org.cot.CMnClassOfTrade',
       'com.modeln.bp.cf.impl.enums.CMnCFTierManagementType',
       'com.modeln.bp.cf.impl.enums.CMnCFTimeFrame',
       'com.modeln.bp.cf.impl.enums.CMnCFTag1',
       'com.modeln.bp.cf.impl.enums.CMnCFTag3',
       'com.modeln.bp.cf.impl.enums.CMnCFScheduleBasisType',
       'com.modeln.bp.cf.action.actiontype.CMnCFProcedureMappingActionType',
       'com.modeln.infr.businessengine.enums.CMnValueType',
       'com.modeln.bp.cf.impl.enums.CMnCFProcedureLevel',
       'com.modeln.bp.cf.impl.enums.CMnCFProcedureType',
       'com.modeln.bp.struct.doc.enums.CMnAdjustmentCalcType',
       'com.modeln.bp.struct.doc.enums.CMnBasisUnit',
       'com.modeln.bp.struct.doc.enums.CMnPaymentMethod',
       'com.modeln.bp.struct.doc.enums.CMnERPAccrualType',
       'com.modeln.bp.cf.impl.enums.CMnCFQualificationMethod',
       'com.modeln.bp.struct.contract.enums.CMnMarketBasketType',
       'com.modeln.bp.cf.impl.enums.CMnCFMeasurementPeriodType',
       'com.modeln.bp.struct.doc.enums.CMnAdjustByMethod',
       'com.modeln.bp.cf.action.actiontype.CMnCFReportAliasDefinitionMappingActionType',
       'com.modeln.bp.struct.doc.enums.CMnFormularyProductExcludeType',
       'com.modeln.bp.cf.impl.enums.CMnCFSpreadSheetType',
       'com.modeln.bp.cf.impl.enums.CMnCFCalcObjVisibilityRule',
       'com.modeln.bp.cf.impl.enums.CMnCFCalcObjVisibilityRules',
       'com.modeln.bp.cf.impl.enums.CMnCFFilterDataSource',
       'com.modeln.bp.cf.impl.enums.CMnCFFilterTag',
       'com.modeln.bp.cf.impl.enums.CMnCFFilterOperator',
       'com.modeln.bp.cf.impl.enums.CMnCFFilterValueType',
       'com.modeln.bp.cf.impl.enums.CMnCFBooleanType',
       'com.modeln.bp.cf.impl.enums.CMnCFCustomerOnSale',
       'com.modeln.bp.mco.utilization.enums.CMnDataLevelType',
       'com.modeln.bp.cf.impl.enums.CMnCFBaselinePeriodType',
       'com.modeln.bp.dw.sales.custom.CMnCustomSaleType2',
       'com.modeln.bp.struct.doc.enums.CMnMarketShareBasisType',
       'com.modeln.bp.struct.doc.enums.CMnPricingMethod',
       'com.modeln.bp.mco.planformularylink.enums.CMnMcoBenefitDesignType',
       'com.modeln.bp.mco.utilization.enums.CMnMcoUtilType',
       'com.modeln.infr.cmty.enums.CMnMcoPlanType',
       'com.modeln.bp.struct.doc.enums.CMnProgramType',
       'com.modeln.bp.cf.impl.enums.CMnCFPublishedDiscountType',
       'com.modeln.bp.dw.sales.custom.CMnCustomSaleType3',
       'com.modeln.bp.mktbasket.CMnMarketBasket',
       'com.modeln.bp.struct.contract.enums.CMnContractSubType',
       'com.modeln.bp.catalog.CMnDrugCategory',
       'ProductHierarchy',
       'LineExtensionDrugIndicator',
       'com.modeln.infr.pof.obj.CMnValidationSevLevel',
       'com.modeln.bp.cf.impl.enums.CMnCFTrackerSSRecordLifecycleStatus',
       'com.modeln.bp.cf.impl.enums.CMnCFTrackerSSRecordValidationStatus',
       'com.modeln.bp.cf.impl.enums.CMnCFLogLevel',
       'com.modeln.bp.struct.doc.enums.CMnCategoryPricing',
       'com.modeln.bp.struct.doc.enums.CMnUtilPriceResolutionMethod',
       'com.modeln.bp.struct.doc.enums.CMnPriceResolutionMethod',
       'com.modeln.bp.cf.impl.enums.CMnCFGrowthType',
       'com.modeln.bp.struct.doc.enums.CMnPriceBasisType',
       'com.modeln.bp.cf.impl.enums.CMnCFPriceMonBenType',
       'com.modeln.bp.struct.pricing.enums.CMnProductType',
       'com.modeln.bp.struct.pricing.CMnBillingDayType',
       'com.modeln.bp.struct.doc.enums.CMnOverridePriceRank',
       'com.modeln.bp.struct.pricing.enums.CMnPricingType',
       'com.modeln.bp.cf.impl.enums.CMnTierTimeframeOffset',
       'com.modeln.bp.struct.doc.enums.CMnPriceTierBasisType',
       'com.modeln.bp.cf.impl.enums.CMnCFUnitBasis',
       'com.modeln.bp.struct.doc.enums.CMnMcoVolumeBasisType',
       'com.modeln.bp.struct.pricing.enums.CMnPriceListType',
       'com.modeln.bp.catalog.enums.CMnFormularyConditionEnum',
       'com.modeln.bp.cf.impl.enums.CMnGrowthComponentType',
       'com.modeln.bp.cf.impl.enums.CMnCFPricingEligibilityRule',
       'com.modeln.bp.cf.impl.enums.CMnCFPricingBaselineEligibilityDateType',
       'com.modeln.bp.cf.impl.enums.CMnCFSaleLineFrom',
       'com.modeln.bp.struct.doc.enums.CMnMSTierEvalFormularyImpact',
       'com.modeln.bp.cf.impl.enums.CMnCFPaymentSegment',
       'com.modeln.bp.cf.impl.enums.CMnCFBaselineEligibilityDateType',
       'com.modeln.bp.cf.impl.enums.CMnCFEligibilityRule',
       'com.modeln.bp.cf.impl.enums.CMnCFCalcDateBasisType',
       'com.modeln.bp.cf.impl.enums.CMnCFPeriodEnhMethodType',
       'com.modeln.bp.cf.impl.enums.CMnCFPeriodEnhMeasurmentUnitType',
       'com.modeln.bp.cf.impl.enums.CMnCFPeriodEnhAppRefType',
       'com.modeln.bp.mco.utilization.enums.CMnFormularyStatus',
       'com.modeln.bp.mco.utilization.enums.CMnFormularyTier' ],
    dataQueryList: 
     [ { objectName: 'PersistedSearch',
         searchName: 'PersistedSearch',
         moduleName: 'admin',
         select: 
          [ 'UserModel',
            'searchXML',
            'ManagedSearch',
            'priorityOrder',
            'DateUpdated',
            'SavedFromFolder' ],
         sortTermList: [ { fullName: 'priorityOrder', descending: 'false' } ],
         searchTermList: 
          [ { attribute: 
               { name: 'UserModel',
                 value: 
                  [ 'IndirectSaleOpen',
                    'SalesSubmission',
                    'DistRebatesClaim',
                    'AutoFix',
                    'AutoReject' ] },
              operator: 'in' } ] },
       { objectName: 'PersistedSearchViews',
         searchName: 'PersistedSearchViews',
         moduleName: 'admin',
         select: [ 'SearchViews', 'DateUpdated', 'UserModel' ],
         sortTermList: [ { fullName: 'DateCreated', descending: 'true' } ],
         searchTermList: 
          [ { attribute: 
               { name: 'UserModel',
                 value: 
                  [ 'IndirectSaleOpen',
                    'IndirectSaleClosed',
                    'IndirectSaleVwLI',
                    'SalesSubmission',
                    'DistRebatesClaim',
                    'AutoFix',
                    'AutoReject',
                    'CommentTemplate',
                    'TaskManagement',
                    'NotifMsg' ] },
              operator: 'in' } ] },
       { moduleName: 'app',
         objectName: 'Member',
         searchName: 'Member',
         selectList: [ 'Pk' ],
         searchTermList: 
          [ { operator: 'contains',
              attribute: { name: 'MemberName', value: 'ALL_WHOLESALERS' } } ] } ],
    validationConfData: 
     { validationConfSelectList: [ 'ConfName', 'DisplayName', 'Extends' ],
       validationMsgSelectList: 
        [ 'Index',
          'MsgType',
          'DisplayName',
          'FormattedMessage',
          'DefaultSeverity',
          'MessageName',
          'PriorityOrder',
          'AdditionalInfo',
          'FatalApps',
          'ErrorApps',
          'WarningApps',
          'ValidApps',
          'IgnoreApps' ],
       validationConfNames: 
        [ 'BaseIndirectChargebackSaleValidation',
          'BothSaleValidation',
          'ZeroMessageGPRebateSaleValidation',
          'AllIndirectSaleValidation',
          'ChargebackSaleValidation',
          'HistoricalAllIndirectSaleValidation',
          'HistoricalChargebackSaleValidation',
          'FWChargebackSaleValidation',
          'HistoricalDirectSaleValidation',
          'DirectSaleValidation',
          'CustomSaleValidation',
          'BaseCustomSaleValidation',
          'MultiDocDDDataValidation',
          'BaseCustomSaleLoading',
          'Edi852Validation',
          'OfflineCalcRbtValidation',
          'CustomerSelfSubmittedDataValidation',
          'RebatePaymentSaleValidation',
          'HistoricalRebatePaymentSaleValidation' ] },
    moduleNames: [ 'coreapp', 'sales', 'mco' ] };
 

fetch(baseUrl + authUrl, {
  method: "post",
  body: JSON.stringify(body),
  headers: { "Content-Type": "application/json" }
})
.then(res => {
    console.log(res.headers.raw()['set-cookie'])
    fetchBootstrap(res.headers.raw()['set-cookie']);
    return res.json()
})
  .then(json => {
    console.log("fetch node ts data");
    console.log(json)
})
.catch(err => console.log(err))

const fetchBootstrap = (cookie) => {
    fetch(baseUrl + bootstrapUrl, {
        method: "post",
        body: JSON.stringify(bootstrapRequestModel),
        headers: { "Content-Type": "application/json" , cookie}
      })
      .then(res => res.json())
      .then(json => console.log(json))
      .catch(err => console.log(err))
}
